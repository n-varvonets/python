AWS CloudFormation - это сервис управления инфраструктурой (Infrastructure as Code),
который позволяет автоматизировать процесс создания и управления инфраструктурой в AWS.

CloudFormation позволяет создавать и управлять ресурсами AWS, такими как:
    - EC2-инстансы,
    - базы данных RDS, dynamo,
    - S3-бакеты
    - и многое другое, с помощью описания инфраструктуры в формате кода.

Почему (Infrastructure as Code).. - конечно можно манульно поднимать каждьі сервис в:
    - разньіх AZ
    - в разньіх env
    ... но єто будет трудно поворить и долго - поєтмоу нужно єто автоматирзировать - кодом через yaml
он нужн когда есть несколько окружений и нужно разварачивать наши сервисьі в каждом из них ОДИНКВУЮ инфрастутуру
(микросервисная - и их много). НЕ одинаковая настройка средьі с prod, dev and stage envs - єто ВСЕГДА плохо.
Т.е. возможность с одного места деплоить ОДИНАКОВО через командьі(не манульно) в разньіе средьі разньіх AZ.

Вариантьі взаимодействия CloudFormation:
    1) мануально: через UI
    2) bash скриптом через cli(aws s3 create-bucket aws aim create role aws crete lambda func --role-....).- єто честьій автоматизированньій подход, правда плох,
        когда много сервисов, то командьі могут бьіть из 10к строк и что не удастся в промежутке вьізвать - все упадет
        и придется заново, т.к. нет отатов к предедущему состоянию, т.е. основная проблема - они ТОЛЬКО создает реусрсьі, а НЕ обновляет
    3) используют ДЕКЛАРАТИВНЬІЙ подход - CloudFormation как и Terrafrom.
        Декларативньій подход позволяет нам думать ОДОВРЕМЕННО об:
            - текущем состоянии приложения и
            - о следущем(желаемом) состоянии нашего арр.
        ПЛЮСЬІ:
            - easy to automate;
            - reproduciable;(ease deploy to diff envs)
            - основной его ПЛЮС: он имеет changeset - набор измений тукщего состояния и желаемого и если оно не менялось, то оно - и не обновляется
        МИНУСЬІ:
            - syntax: not hunam readable - єто должно бьіть оставлено для чтения компьютерам
    4) DOMs(documets)(основан на декларативном подходе п.3)
    5) Components(основан на декларативном подходе п.3)


Основными понятиями и структурой шаблона CloudFormation:
    - Шаблон CloudFormation - это файл в формате JSON или YAML, который описывает инфраструктуру AWS, которую нужно создать.
    - Ресурсы - это объекты, которые вы создаете с помощью CloudFormation, например, EC2-инстансы, S3-бакеты и т.д.
    - Стек - это набор ресурсов, связанных между собой и созданных из одного шаблона CloudFormation.
    - Параметры - это значения, передаваемые в шаблон CloudFormation при создании стека, такие как имя пользователя, пароль, размер EC2-инстанса и т.д.
    - Метки (tags) - это метаданные, которые можно присваивать ресурсам для облегчения управления и поиска.

Описание состояния стека - это информация о текущем состоянии стека, включая список созданных ресурсов, их статус и зависимости между ними.
Чтобы начать работать с CloudFormation, вам необходимо создать шаблон, который описывает вашу инфраструктуру,
а затем использовать этот шаблон для создания стека. Во время создания стека CloudFormation создаст все необходимые ресурсы и установит их в соответствии с описанием в шаблоне.