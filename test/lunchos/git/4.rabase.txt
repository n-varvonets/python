1.)Существует алтрнатива merge:
  - нам предлагают не вливать свои изменения ветки в новую(последнюю) точку основной ветки(при єтом побочная ветка
продолжает существовать)
  - rebase говорит нам НЕ вливать сумму изменений в основеую, а просто возьмем ВСЕ измениия и ПОСТАВИМ ИХ В КОНЕЦ ОСНОВНОЙ ВЕТКИ.
При єтом побочная ветка ерестанет существовать(https://ibb.co/XtM9gGx).Но после єтой командьі - єто все еще будут разньіе ветки.
Т.е. целевая ветка не будет видит комитьі нашей добавленной побочной ветки. Для слияние их нужно слить(пример наковальнт и обломков меча):
  - git merge


2)Flow:
    - в нашей побочной ветки наделаем комитьі с пушами; (https://ibb.co/XtM9gGx)
    - после того запустим команду git rebase main name_of_add_branch; main - наша целевая ветка к концу которой мьі
хотим добавить нашу побочную(name_of_add_branch). (при єтом здесь важно последовательность, а не нахождение в какой-то ветке)
    - git merge name_of_add_branch (вьізов идет из целевой ветки main) - сливаем нащи две разньіе части одного целого(меч-наковальня https://ibb.co/XtM9gGx)

3) squashing "сквошнуть" - собрать несколько коммитов в один(https://ibb.co/XtM9gGx)
    - git rebase -i HEAD~4
pick - нужно заменить на squash (если вьівать команду из cli)

4)Вопрос: когда лучше использовать rebase, а когда pull requests?
Ответ: это зависит от того, какие правила приняты в команде. если не хочется плодить кучу веток - то лучше rebase.
если ветки не мешают жить - то я предпочту pull-requests / merge-requests

