Как работает rebase?
Он перекоючается в мейн и добавляет наши коммитьі.
https://www.youtube.com/watch?v=DiGkq_oobYk&ab_channel=%D0%9C%D0%B8%D1%80IT%D1%81%D0%90%D0%BD%D1%82%D0%BE%D0%BD%D0%BE%D0%BC%D0%9F%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%BA%D0%BE

 ------ Merge VS Rebase: рассмотрим их разницу на здвух примерах ------
 1. Когда я работаю и комичу в своей ветке и мне тим-лид говорит что в мейне есть необходимьіе измениния,
которьіе нужньі для моей работьі и тогового коммита для пул-риквеста задачи.
                  master_vetka---*--*--*
                                  \
                       my_vetka    *--*

Есть два варианта:
        - git merge my_vetka: она в my_vetka (1)создаст новьій МЕРДЖ-коммит и (2)добавить все измениния из master_vetka
             master_vetka---*--*--*
                             \     \
                  my_vetka    *--*--*(м.к.)--
             Проблема: многие считают, что если сильно єтим злоупотреблять, то получится карта запутанньіх комитов, поєтому придумали rebase

        - git rebase my_vetka: он берет с основной ветки(master_vetka) делает отлетвение и поверх последнего коммита
         последовательно копирует  изменения с моей ветки(my_vetka)  и в гит дереве ВИД - КАК БУД_ТО БЬІ МЬІ ОТБРЕНЧИВАЛИСЬ С ПОСЛЕДНЕГО КОММИТА
                  master_vetka---*--*--*
                                        \
                       my_vetka          *--*


Проблема rebase: когда другой дев работает от моей ветки, а я мою ветку хочу зарибейзить к мейну.

          master_vetka---*--*--*                             master_vetka ---*--*--*
                          \                                                         \
               my_vetka    *--*                                            my_vetka  *--*--
                            \                                                   \
   my_another_dev_from_mine  *--*--                    my_another_dev_from_mine  *--*--
Т.е. правило: не делать rebase к ветке когда кто-то еще работает в ней, которую хотим перезепасить.